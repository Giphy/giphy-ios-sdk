#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef GIPHYUISDK_SWIFT_H
#define GIPHYUISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <GiphyUISDK/GiphyUISDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GiphyUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC10GiphyUISDK12CallToAction")
@interface CallToAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable link;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12CaptionState")
@interface CaptionState : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSCoder;
@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC10GiphyUISDK21EmojiDrawerBackground")
@interface EmojiDrawerBackground : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)layoutSubviews;
@end

@class GPHRequestConfig;
@class NSURLResponse;
@class NSOperation;

/// GIPHY Abstract API Client.
SWIFT_CLASS("_TtC10GiphyUISDK17GPHAbstractClient")
@interface GPHAbstractClient : NSObject
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nullable _apiKey;
/// Network reachability status. Not supported in watchOS.
@property (nonatomic) BOOL useReachability;
/// Perform a request
/// \param config GPHRequestConfig
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)httpRequestWith:(GPHRequestConfig * _Nonnull)config completionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Action types. Must be Int so that it can be used in Objective-C.
typedef SWIFT_ENUM(NSInteger, GPHActionType, open) {
  GPHActionTypeSeen = 0,
  GPHActionTypeHover = 1,
  GPHActionTypeClick = 2,
  GPHActionTypeSent = 3,
  GPHActionTypeFavorite = 4,
  GPHActionTypeStart = 5,
  GPHActionTypeLongpress = 6,
};


/// Sub-classing Operation to make sure we manage its state correctly
SWIFT_CLASS("_TtC10GiphyUISDK17GPHAsyncOperation")
@interface GPHAsyncOperation : NSOperation
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHAsyncOperation (SWIFT_EXTENSION(GiphyUISDK))
/// To handle KVO for ready state
@property (nonatomic, readonly, getter=isReady) BOOL ready;
/// To handle KVO for ready executing
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
/// To handle KVO for finished state
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
/// Override so we can claim to be async.
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
/// Override to manage the state correctly for async.
- (void)start;
/// Override to handle canceling so we can change the state to trigger KVO.
- (void)cancel;
@end


/// A specific type of async operation with a completion handler.
SWIFT_CLASS("_TtC10GiphyUISDK31GPHAsyncOperationWithCompletion")
@interface GPHAsyncOperationWithCompletion : GPHAsyncOperation
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHAttributionView")
@interface GPHAttributionView : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLCache;
@class NSData;
@class NSURLSessionDataTask;
@class GiphyYYImage;

SWIFT_CLASS("_TtC10GiphyUISDK8GPHCache")
@interface GPHCache : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHCache * _Nonnull shared;)
+ (GPHCache * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) NSURLCache * _Nonnull cache;
/// Removes all objects from the cache. This method blocks the calling thread until the cache has been cleared.
/// Uses a semaphore to achieve synchronicity on the disk cache.
- (void)clear;
/// \param urlString The url of the asset.
///
/// \param completion A closure that provide a <code>NSData</code> or an <code>Error</code>.
///
///
/// returns:
/// A network task (<code>URLSessionDataTask</code>) discardable.
- (NSURLSessionDataTask * _Nullable)downloadAssetData:(NSString * _Nonnull)urlString completion:(void (^ _Nullable)(NSData * _Nullable, NSError * _Nullable))completion;
- (NSURLSessionDataTask * _Nullable)downloadAsset:(NSString * _Nonnull)urlString key:(NSString * _Nullable)key completion:(void (^ _Nullable)(GiphyYYImage * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK13GPHFilterable")
@interface GPHFilterable : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) BOOL (^ _Nullable filter)(GPHFilterable * _Nonnull);)
+ (BOOL (^ _Nullable)(GPHFilterable * _Nonnull))filter SWIFT_WARN_UNUSED_RESULT;
+ (void)setFilter:(BOOL (^ _Nullable)(GPHFilterable * _Nonnull))value;
- (BOOL)isValidObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GPHMedia;

/// Represents Giphy Categories & Subcategories
SWIFT_CLASS("_TtC10GiphyUISDK11GPHCategory")
@interface GPHCategory : GPHFilterable <NSCoding>
/// Name of the Category.
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// Encoded name of the Category.
@property (nonatomic, readonly, copy) NSString * _Nonnull nameEncoded;
/// URL Encoded path of the Category (to make sure we have the full-path for subcategories).
@property (nonatomic, readonly, copy) NSString * _Nonnull encodedPath;
/// GIF representation of the Category.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable gif;
/// Subcategories of the Category.
@property (nonatomic, readonly, copy) NSArray<GPHCategory *> * _Nullable subCategories;
/// JSON Representation.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable jsonRepresentation;
/// User Dictionary to Store data in Obj by the Developer
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param name Name of the Category.
///
/// \param nameEncoded URL Encoded name of the Category.
///
/// \param encodedPath URL Encoded path of the Category (to make sure we have the full-path for subcategories).
///
- (nonnull instancetype)init:(NSString * _Nonnull)name nameEncoded:(NSString * _Nonnull)nameEncoded encodedPath:(NSString * _Nonnull)encodedPath;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyUISDK))
- (void)addSubCategory:(GPHCategory * _Nonnull)subCategory;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHUser;
@class GPHChannelTag;

/// Represents Giphy Channels
SWIFT_CLASS("_TtC10GiphyUISDK10GPHChannel")
@interface GPHChannel : GPHFilterable
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger StickersRootId;)
+ (NSInteger)StickersRootId SWIFT_WARN_UNUSED_RESULT;
/// ID of this Channel.
@property (nonatomic, readonly) NSInteger id;
/// Slug of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable slug;
/// Url of the Channel including parents channels. ie “/friends/characters/ross-geller”
@property (nonatomic, readonly, copy) NSString * _Nullable url;
/// Display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
/// Shortd display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable shortDisplayName;
/// Type for this Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable type;
/// Content Type (Gif or Sticker) of the Channel
@property (nonatomic, readonly, copy) NSString * _Nullable contentType;
/// Description of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable descriptionText;
/// Banner Image of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable bannerImage;
/// [optional] The featured gif for the pack itself.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable featuredGif;
/// User who owns this Channel.
@property (nonatomic, readonly, strong) GPHUser * _Nullable user;
/// A list of tags for this Channel.
@property (nonatomic, readonly, copy) NSArray<GPHChannelTag *> * _Nullable tags;
@property (nonatomic, readonly, copy) NSArray<GPHChannel *> * _Nonnull ancestors;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// \param id ID of the Channel.
///
- (nonnull instancetype)init:(NSInteger)id OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface GPHChannel (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHMeta;

/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC10GiphyUISDK11GPHResponse")
@interface GPHResponse : NSObject
/// Message description.
@property (nonatomic, strong) GPHMeta * _Nonnull meta;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta;
@end


/// Represents a Giphy List Channel Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK18GPHChannelResponse")
@interface GPHChannelResponse : GPHResponse
/// Channel object.
@property (nonatomic, readonly, strong) GPHChannel * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHChannel object.
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(GPHChannel * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHChannelResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents Giphy A Channel Tag Object
SWIFT_CLASS("_TtC10GiphyUISDK13GPHChannelTag")
@interface GPHChannelTag : GPHFilterable
/// Display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable tag;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHChannelTag (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class GPHMediaResponse;
@class GPHListMediaResponse;
@class GPHListTermSuggestionResponse;
@class GPHListChannelResponse;

/// Entry point into the Swift API.
SWIFT_CLASS("_TtC10GiphyUISDK9GPHClient")
@interface GPHClient : GPHAbstractClient
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nonnull apiKey;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHeaders;
/// Initializer
/// \param apiKey Apps api-key to access end-points.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey OBJC_DESIGNATED_INITIALIZER;
/// GIF by ID
/// \param id GIF ID.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nullable)gifByID:(NSString * _Nonnull)id timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// GIFs by IDs
/// \param ids array of GIF IDs.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nullable)gifsByIDs:(NSArray<NSString *> * _Nonnull)ids context:(NSString * _Nullable)context timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Emoji
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
/// \param offset Offset of results (default: 0)
///
/// \param limit Total hits you request (default: 25)
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)emojiWithOffset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Emoji
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
/// \param offset Offset of results (default: 0)
///
/// \param limit Total hits you request (default: 25)
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)defaultEmojisWithOffset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nullable)emojiVariationsByID:(NSString * _Nonnull)id context:(NSString * _Nullable)context timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Trending Searches
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)trendingSearchesWithTimeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListTermSuggestionResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nonnull)channelsSearch:(NSString * _Nonnull)query offset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListChannelResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nonnull)animate:(NSString * _Nonnull)query timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

@class NSBundle;

SWIFT_CLASS("_TtC10GiphyUISDK24GPHWrapperViewController")
@interface GPHWrapperViewController : UIViewController
- (nonnull instancetype)init;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
@end


SWIFT_CLASS("_TtC10GiphyUISDK22GPHClipsViewController")
@interface GPHClipsViewController : GPHWrapperViewController
- (void)viewDidLoad;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
@end

enum GPHMediaType : NSInteger;
enum GPHLanguageType : NSInteger;

SWIFT_CLASS("_TtC10GiphyUISDK10GPHContent")
@interface GPHContent : NSObject
@property (nonatomic, readonly, strong) GPHContent * _Nonnull contentCopy;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingGifs;)
+ (GPHContent * _Nonnull)trendingGifs SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingVideo;)
+ (GPHContent * _Nonnull)trendingVideo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingStickers;)
+ (GPHContent * _Nonnull)trendingStickers SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingText;)
+ (GPHContent * _Nonnull)trendingText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull emoji;)
+ (GPHContent * _Nonnull)emoji SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)emojiVariations:(NSString * _Nonnull)forID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull recents;)
+ (GPHContent * _Nonnull)recents SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)searchWithQuery:(NSString * _Nonnull)queryString mediaType:(enum GPHMediaType)mediaType language:(enum GPHLanguageType)language includeDynamicResults:(BOOL)includeDynamicResults SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)animate:(NSString * _Nonnull)input SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)trendingWithMediaType:(enum GPHMediaType)mediaType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GPHContentType, open) {
  GPHContentTypeRecents = 0,
  GPHContentTypeGifs = 1,
  GPHContentTypeClips = 2,
  GPHContentTypeStickers = 3,
  GPHContentTypeText = 4,
  GPHContentTypeEmoji = 5,
};


/// Async Request Operations with Completion Handler Support
SWIFT_CLASS("_TtC10GiphyUISDK14GPHCoreRequest")
@interface GPHCoreRequest : GPHAsyncOperationWithCompletion
/// Override the Operation function main to handle the request
- (void)main;
@end

/// Action types. Must be Int so that it can be used in Objective-C.
typedef SWIFT_ENUM(NSInteger, GPHEventType, open) {
  GPHEventTypeRecentlyPicked = 0,
};

typedef SWIFT_ENUM(NSInteger, GPHFileExtension, open) {
  GPHFileExtensionMp4 = 0,
  GPHFileExtensionGif = 1,
  GPHFileExtensionWebp = 2,
};


typedef SWIFT_ENUM(NSInteger, GPHGifButtonColor, open) {
  GPHGifButtonColorPink = 0,
  GPHGifButtonColorBlue = 1,
  GPHGifButtonColorBlack = 2,
  GPHGifButtonColorWhite = 3,
};

@class UICollectionViewCell;

SWIFT_PROTOCOL("_TtP10GiphyUISDK15GPHGridDelegate_")
@protocol GPHGridDelegate
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
- (void)didScrollWithOffset:(CGFloat)offset;
@optional
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
@end


SWIFT_CLASS("_TtC10GiphyUISDK8GPHIcons")
@interface GPHIcons : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




enum GPHRenditionType : NSInteger;

/// Represents a Giphy Image (GIF/Sticker)
SWIFT_CLASS("_TtC10GiphyUISDK8GPHImage")
@interface GPHImage : GPHFilterable
/// ID of the Represented GPHMedia Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// ID of the Represented Object.
@property (nonatomic, readonly) enum GPHRenditionType rendition;
/// URL of the Gif file.
@property (nonatomic, readonly, copy) NSString * _Nullable gifUrl;
/// URL of the Still Gif file.
@property (nonatomic, readonly, copy) NSString * _Nullable stillGifUrl;
/// Width.
@property (nonatomic, readonly) NSInteger width;
/// Height.
@property (nonatomic, readonly) NSInteger height;
/// <h1>of Frames.</h1>
@property (nonatomic, readonly) NSInteger frames;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger gifSize;
/// URL of the WebP file.
@property (nonatomic, readonly, copy) NSString * _Nullable webPUrl;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger webPSize;
/// URL of the mp4 file.
@property (nonatomic, readonly, copy) NSString * _Nullable mp4Url;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger mp4Size;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
/// \param rendition Rendition Type of the Image.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId rendition:(enum GPHRenditionType)rendition;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHImage (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy Images (Renditions) for a GPHMedia
SWIFT_CLASS("_TtC10GiphyUISDK9GPHImages")
@interface GPHImages : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// Original file size and file dimensions. Good for desktop use.
@property (nonatomic, readonly, strong) GPHImage * _Nullable original;
@property (nonatomic, readonly, strong) GPHImage * _Nullable originalStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable preview;
@property (nonatomic, readonly, strong) GPHImage * _Nullable looping;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeight;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightDownsampled;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightSmallStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidth;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthDownsampled;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthSmallStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsized;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedMedium;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedLarge;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedStill;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface GPHImages (SWIFT_EXTENSION(GiphyUISDK))
- (GPHImage * _Nullable)rendition:(enum GPHRenditionType)rendition SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPHImages (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

/// Represents Giphy APIs Supported Languages
typedef SWIFT_ENUM(NSInteger, GPHLanguageType, open) {
/// English (en)
  GPHLanguageTypeEnglish = 0,
/// Spanish (es)
  GPHLanguageTypeSpanish = 1,
/// Portuguese (pt)
  GPHLanguageTypePortuguese = 2,
/// Indonesian (id)
  GPHLanguageTypeIndonesian = 3,
/// French (fr)
  GPHLanguageTypeFrench = 4,
/// Arabic (ar)
  GPHLanguageTypeArabic = 5,
/// Turkish (tr)
  GPHLanguageTypeTurkish = 6,
/// Thai (th)
  GPHLanguageTypeThai = 7,
/// Vietnamese (vi)
  GPHLanguageTypeVietnamese = 8,
/// German (de)
  GPHLanguageTypeGerman = 9,
/// Italian (it)
  GPHLanguageTypeItalian = 10,
/// Japanese (ja)
  GPHLanguageTypeJapanese = 11,
/// Chinese Simplified (zh-cn)
  GPHLanguageTypeChineseSimplified = 12,
/// Chinese Traditional (zh-tw)
  GPHLanguageTypeChineseTraditional = 13,
/// Russian (ru)
  GPHLanguageTypeRussian = 14,
/// Korean (ko)
  GPHLanguageTypeKorean = 15,
/// Polish (pl)
  GPHLanguageTypePolish = 16,
/// Dutch (nl)
  GPHLanguageTypeDutch = 17,
/// Romanian (ro)
  GPHLanguageTypeRomanian = 18,
/// Hungarian (hu)
  GPHLanguageTypeHungarian = 19,
/// Swedish (sv)
  GPHLanguageTypeSwedish = 20,
/// Czech (cs)
  GPHLanguageTypeCzech = 21,
/// Hindi (hi)
  GPHLanguageTypeHindi = 22,
/// Bengali (bn)
  GPHLanguageTypeBengali = 23,
/// Danish (da)
  GPHLanguageTypeDanish = 24,
/// Farsi (fa)
  GPHLanguageTypeFarsi = 25,
/// Filipino (tl)
  GPHLanguageTypeFilipino = 26,
/// Finnish (fi)
  GPHLanguageTypeFinnish = 27,
/// Hebrew (iw)
  GPHLanguageTypeHebrew = 28,
/// Malay (ms)
  GPHLanguageTypeMalay = 29,
/// Norwegian (no)
  GPHLanguageTypeNorwegian = 30,
/// Ukrainian (uk)
  GPHLanguageTypeUkrainian = 31,
};

@class GPHPagination;

/// Represents a Giphy List Category Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK23GPHListCategoryResponse")
@interface GPHListCategoryResponse : GPHResponse
/// Category Objects.
@property (nonatomic, readonly, copy) NSArray<GPHCategory *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHCategory *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListCategoryResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Channel Response
SWIFT_CLASS("_TtC10GiphyUISDK22GPHListChannelResponse")
@interface GPHListChannelResponse : GPHResponse
/// Category Objects.
@property (nonatomic, readonly, copy) NSArray<GPHChannel *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHChannel array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHChannel *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListChannelResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Media Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK20GPHListMediaResponse")
@interface GPHListMediaResponse : GPHResponse
/// Gifs/Stickers.
@property (nonatomic, readonly, copy) NSArray<GPHMedia *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHMedia *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListMediaResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Term Suggestions Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK29GPHListTermSuggestionResponse")
@interface GPHListTermSuggestionResponse : GPHResponse
/// Terms Suggested.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHTermSuggestion array (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nullable)meta data:(NSArray<NSString *> * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListTermSuggestionResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


enum GPHRatingType : NSInteger;
@class NSDate;
@class GPHVideo;

/// Represents a Giphy Media Object
SWIFT_CLASS("_TtC10GiphyUISDK8GPHMedia")
@interface GPHMedia : GPHFilterable
/// ID of the Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
/// Media Type (GIF|Sticker).
@property (nonatomic, readonly) enum GPHMediaType type;
/// URL of the GIF/Sticker.
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
/// Content Rating (Default G).
@property (nonatomic, readonly) enum GPHRatingType rating;
/// Title.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Caption.
@property (nonatomic, readonly, copy) NSString * _Nullable caption;
/// URL Slug.
@property (nonatomic, readonly, copy) NSString * _Nullable slug;
/// Indexable or Not.
@property (nonatomic, readonly, copy) NSString * _Nullable indexable;
/// Content.
@property (nonatomic, readonly, copy) NSString * _Nullable contentUrl;
/// Bitly Short URL.
@property (nonatomic, readonly, copy) NSString * _Nullable bitlyUrl;
/// Bitly Short URL for GIF.
@property (nonatomic, readonly, copy) NSString * _Nullable bitlyGifUrl;
/// Embed URL.
@property (nonatomic, readonly, copy) NSString * _Nullable embedUrl;
/// Attribution Source.
@property (nonatomic, readonly, copy) NSString * _Nullable source;
/// Attribution Source Domain TLD.
@property (nonatomic, readonly, copy) NSString * _Nullable sourceTld;
/// Attribution Source Post URL.
@property (nonatomic, readonly, copy) NSString * _Nullable sourcePostUrl;
/// Atrribution / User.
@property (nonatomic, readonly, strong) GPHUser * _Nullable user;
@property (nonatomic, readonly, strong) GPHImages * _Nullable images;
/// Tags representing the Media Object.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable tags;
/// Featured Tags.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable featuredTags;
/// Import Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable importDate;
/// Creation Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable createDate;
/// Last Update Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable updateDate;
/// Trending Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable trendingDate;
@property (nonatomic, readonly) BOOL isDynamic;
@property (nonatomic, readonly, strong) GPHVideo * _Nullable video;
/// Analytics Response Payload
@property (nonatomic, readonly, copy) NSString * _Nullable analyticsResponsePayload;
/// text too create
@property (nonatomic, readonly, copy) NSString * _Nullable animatedTextStyle;
@property (nonatomic, readonly) BOOL isHidden;
@property (nonatomic, readonly) BOOL isRemoved;
@property (nonatomic, readonly) BOOL isCommunity;
@property (nonatomic, readonly) BOOL isAnonymous;
@property (nonatomic, readonly) BOOL isFeatured;
@property (nonatomic, readonly) BOOL isRealtime;
@property (nonatomic, readonly) BOOL isIndexable;
@property (nonatomic, readonly) BOOL isSticker;
@property (nonatomic, readonly) BOOL hasAttribution;
@property (nonatomic, readonly, strong) CallToAction * _Nullable callToAction;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param id Media Object ID.
///
/// \param type Media Type (GIF/Sticker).
///
/// \param url URL of the Media Object.
///
- (nonnull instancetype)init:(NSString * _Nonnull)id type:(enum GPHMediaType)type url:(NSString * _Nonnull)url;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
- (NSString * _Nullable)urlWithRendition:(enum GPHRenditionType)rendition fileType:(enum GPHFileExtension)fileType SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGFloat aspectRatio;
@end


@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic) BOOL isEmoji;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable pingbacksAttributes;
@property (nonatomic, copy) NSString * _Nullable responseId;
@end


@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly) BOOL isVideo;
@property (nonatomic, readonly, copy) NSString * _Nonnull videoDetailURL;
@property (nonatomic, readonly, copy) NSString * _Nullable smallVideoAssetURL;
@property (nonatomic, readonly, copy) NSString * _Nullable clipsDetailVideoAssetURL;
- (NSString * _Nonnull)availableMp4Url SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GPHMediaCell")
@interface GPHMediaCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForReuse;
@end


/// Represents a Giphy Media Response (single result)
SWIFT_CLASS("_TtC10GiphyUISDK16GPHMediaResponse")
@interface GPHMediaResponse : GPHResponse
/// Message description.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(GPHMedia * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMediaResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy Object Type (GIF/Sticker/…)
typedef SWIFT_ENUM(NSInteger, GPHMediaType, open) {
/// Gif Media Type
  GPHMediaTypeGif = 0,
/// Sticker Media Type
  GPHMediaTypeSticker = 1,
/// Text Media Type
  GPHMediaTypeText = 2,
/// Video Media Type
  GPHMediaTypeVideo = 3,
};

@protocol GPHMediaViewDelegate;
@class GPHTheme;
@class UIImage;

SWIFT_CLASS("_TtC10GiphyUISDK12GPHMediaView")
@interface GPHMediaView : GiphyYYAnimatedImageView
@property (nonatomic, weak) id <GPHMediaViewDelegate> _Nullable delegate;
@property (nonatomic) BOOL showAttribution;
@property (nonatomic, strong) GPHTheme * _Nullable theme;
@property (nonatomic, strong) GPHMedia * _Nullable media;
- (nonnull instancetype)init;
- (void)loadAssetAt:(NSString * _Nonnull)url queueOriginalRendition:(BOOL)queueOriginalRendition;
- (void)cancelLoading;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMediaView (SWIFT_EXTENSION(GiphyUISDK))
- (void)setMedia:(GPHMedia * _Nonnull)media rendition:(enum GPHRenditionType)rendition shouldQueueOriginalRendition:(BOOL)shouldQueueOriginalRendition;
@end


SWIFT_PROTOCOL("_TtP10GiphyUISDK20GPHMediaViewDelegate_")
@protocol GPHMediaViewDelegate
- (void)didPressMoreByUser:(NSString * _Nonnull)user;
@end


/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC10GiphyUISDK7GPHMeta")
@interface GPHMeta : NSObject
/// Unique response id.
@property (nonatomic, readonly, copy) NSString * _Nullable responseId;
/// Status (200, 404…)
@property (nonatomic, readonly) NSInteger status;
/// Message description.
@property (nonatomic, readonly, copy) NSString * _Nonnull msg;
/// Error Code.
@property (nonatomic, readonly, copy) NSString * _Nonnull errorCode;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMeta (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



SWIFT_CLASS("_TtC10GiphyUISDK9GPHOMData")
@interface GPHOMData : GPHFilterable
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Represents a Giphy Response Pagination Info
SWIFT_CLASS("_TtC10GiphyUISDK13GPHPagination")
@interface GPHPagination : NSObject
/// Total Result Count.
@property (nonatomic, readonly) NSInteger totalCount;
/// Actual Result Count (not always == limit)
@property (nonatomic, readonly) NSInteger count;
/// Returned (if Filters applied) Result Count (not always == limit)
@property (nonatomic, readonly) NSInteger filteredCount;
/// Offset to start next set of results.
@property (nonatomic, readonly) NSInteger offset;
/// Next Page token
@property (nonatomic, readonly, copy) NSString * _Nullable nextCursor;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)updateFilteredCount:(NSInteger)count;
@end


@interface GPHPagination (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy URLRequest Type
typedef SWIFT_ENUM(NSInteger, GPHPingbackRequestType, open) {
/// Pingback Request.
  GPHPingbackRequestTypePingback = 0,
};


/// GIPHY Abstract API Client.
SWIFT_CLASS("_TtC10GiphyUISDK26GPHPingbacksAbstractClient")
@interface GPHPingbacksAbstractClient : NSObject
/// Default timeout for network requests. Default: 10 seconds.
@property (nonatomic) NSTimeInterval timeout;
/// Network reachability status. Not supported in watchOS.
@property (nonatomic) BOOL useReachability;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Entry point into the Swift API.
SWIFT_CLASS("_TtC10GiphyUISDK18GPHPingbacksClient")
@interface GPHPingbacksClient : GPHPingbacksAbstractClient
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nonnull apiKey;
/// Consumer user ID.
@property (nonatomic, copy) NSString * _Nonnull userId;
/// Initializer
/// \param apiKey Apps api-key to access end-points.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey OBJC_DESIGNATED_INITIALIZER;
@end

/// Represents content rating (y,g, pg, pg-13 or r)
typedef SWIFT_ENUM(NSInteger, GPHRatingType, open) {
/// Rated Y
  GPHRatingTypeRatedY = 0,
/// Rated G
  GPHRatingTypeRatedG = 1,
/// Rated PG
  GPHRatingTypeRatedPG = 2,
/// Rated PG-13
  GPHRatingTypeRatedPG13 = 3,
/// Rated R
  GPHRatingTypeRatedR = 4,
/// Not Safe for Work
  GPHRatingTypeNsfw = 5,
/// Unrated
  GPHRatingTypeUnrated = 6,
};


SWIFT_CLASS("_TtC10GiphyUISDK17GPHRecentSearches")
@interface GPHRecentSearches : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK10GPHRecents")
@interface GPHRecents : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Represents a Giphy Rendition Type (Original/Preview/…)
typedef SWIFT_ENUM(NSInteger, GPHRenditionType, open) {
/// Original file size and file dimensions. Good for desktop use.
  GPHRenditionTypeOriginal = 0,
/// Preview image for original.
  GPHRenditionTypeOriginalStill = 1,
/// File size under 50kb. Duration may be truncated to meet file size requirements. Good for thumbnails and previews.
  GPHRenditionTypePreview = 2,
/// Duration set to loop for 15 seconds. Only recommended for this exact use case.
  GPHRenditionTypeLooping = 3,
/// Height set to 200px. Good for mobile use.
  GPHRenditionTypeFixedHeight = 4,
/// Static preview image for fixed_height
  GPHRenditionTypeFixedHeightStill = 5,
/// Height set to 200px. Reduced to 6 frames to minimize file size to the lowest.
/// Works well for unlimited scroll on mobile and as animated previews. See Giphy.com on mobile web as an example.
  GPHRenditionTypeFixedHeightDownsampled = 6,
/// Height set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedHeightSmall = 7,
/// Static preview image for fixed_height_small
  GPHRenditionTypeFixedHeightSmallStill = 8,
/// Width set to 200px. Good for mobile use.
  GPHRenditionTypeFixedWidth = 9,
/// Static preview image for fixed_width
  GPHRenditionTypeFixedWidthStill = 10,
/// Width set to 200px. Reduced to 6 frames. Works well for unlimited scroll on mobile and as animated previews.
  GPHRenditionTypeFixedWidthDownsampled = 11,
/// Width set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedWidthSmall = 12,
/// Static preview image for fixed_width_small
  GPHRenditionTypeFixedWidthSmallStill = 13,
/// File size under 2mb.
  GPHRenditionTypeDownsized = 14,
/// File size under 200kb.
  GPHRenditionTypeDownsizedSmall = 15,
/// File size under 5mb.
  GPHRenditionTypeDownsizedMedium = 16,
/// File size under 8mb.
  GPHRenditionTypeDownsizedLarge = 17,
/// Static preview image for downsized.
  GPHRenditionTypeDownsizedStill = 18,
};

@class NSURLQueryItem;
@class NSURLRequest;

SWIFT_CLASS("_TtC10GiphyUISDK16GPHRequestConfig")
@interface GPHRequestConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull base;
@property (nonatomic, copy) NSArray<NSURLQueryItem *> * _Nullable queryItems;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, copy) NSData * _Nullable httpBody;
@property (nonatomic, copy) NSString * _Nullable contentType;
@property (nonatomic, copy) NSString * _Nonnull path;
@property (nonatomic, copy) NSString * _Nonnull requestType;
@property (nonatomic, copy) NSString * _Nonnull apiKey;
@property (nonatomic) NSInteger retry;
@property (nonatomic) NSTimeInterval timeoutInterval;
- (NSURLRequest * _Nonnull)getRequest SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface GPHResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GPHSearchBar")
@interface GPHSearchBar : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface GPHSearchBar (SWIFT_EXTENSION(GiphyUISDK)) <UITextFieldDelegate>
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, GPHStickerColumnCount, open) {
  GPHStickerColumnCountTwo = 0,
  GPHStickerColumnCountThree = 1,
  GPHStickerColumnCountFour = 2,
};


SWIFT_CLASS("_TtC10GiphyUISDK13GPHSuggestion")
@interface GPHSuggestion : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK9GPHTabBar")
@interface GPHTabBar : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


/// Represents a Giphy Term Suggestion
SWIFT_CLASS("_TtC10GiphyUISDK17GPHTermSuggestion")
@interface GPHTermSuggestion : GPHFilterable
/// Term suggestion.
@property (nonatomic, readonly, copy) NSString * _Nonnull term;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param term Term suggestion.
///
- (nonnull instancetype)init:(NSString * _Nonnull)term;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHTermSuggestion (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class UIResponder;

SWIFT_CLASS("_TtC10GiphyUISDK12GPHTextField")
@interface GPHTextField : UITextField
@property (nonatomic, readonly, strong) UIResponder * _Nullable nextResponder;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHTextLoadingView")
@interface GPHTextLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end

enum GPHThemeType : NSInteger;
@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC10GiphyUISDK8GPHTheme")
@interface GPHTheme : NSObject
- (nonnull instancetype)initWithType:(enum GPHThemeType)type;
@property (nonatomic) enum GPHThemeType type;
@property (nonatomic, readonly, strong) UIColor * _Nonnull handleBarColor;
@property (nonatomic, readonly) UIScrollViewIndicatorStyle emojiDrawerScrollIndicatorStyle;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerGradientTopColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerGradientBottomColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerSeparatorColor;
@property (nonatomic, readonly, strong) UIImage * _Nullable searchButtonIcon;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBackButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchPlaceholderTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBarBackgroundColor;
@property (nonatomic, readonly, strong) UIFont * _Nullable searchTextFont;
@property (nonatomic, readonly) CGFloat searchBarPadding;
@property (nonatomic, readonly) CGFloat searchBarCornerRadius;
@property (nonatomic, readonly) BOOL showSuggestionsBar;
@property (nonatomic, readonly, strong) UIColor * _Nonnull suggestionCellBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull suggestionCellTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tabBarSwitchSelectedColor;
@property (nonatomic, readonly, strong) UIColor * _Nullable tabBarSwitchDefaultColor;
@property (nonatomic, readonly) CGFloat tabBarBackgroundAlpha;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationSelectButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationSelectButtonTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull usernameColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationBackButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationViewOnGiphyColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull avatarPlaceholderColor;
@property (nonatomic, readonly) CGFloat cellCornerRadius;
@property (nonatomic, readonly, strong) UIColor * _Nonnull stickerBackgroundColor;
@property (nonatomic, readonly) BOOL fixedSizeCells;
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColorForLoadingCells;
@property (nonatomic, readonly) UIKeyboardAppearance keyboardAppearance;
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull defaultTextColor;
@property (nonatomic, readonly) UIBlurEffectStyle blurStyle;
@property (nonatomic, readonly) BOOL isDarkMode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GPHThemeType, open) {
  GPHThemeTypeDark = 0,
  GPHThemeTypeLight = 1,
  GPHThemeTypeLightBlur = 2,
  GPHThemeTypeDarkBlur = 3,
  GPHThemeTypeAutomatic = 4,
};

@class NSIndexPath;

SWIFT_PROTOCOL("_TtP10GiphyUISDK19GPHTrackingDelegate_")
@protocol GPHTrackingDelegate
- (GPHMedia * _Nullable)mediaForIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
- (BOOL)mediaIsLoadedAtIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)impressionOccurredWithMedia:(GPHMedia * _Nonnull)media;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHTrackingManager")
@interface GPHTrackingManager : NSObject
- (void)updateTracking;
+ (BOOL)trackWithMedia:(GPHMedia * _Nonnull)media userID:(NSString * _Nonnull)userID actionType:(enum GPHActionType)actionType;
+ (void)reset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents a Giphy User Object
/// http://api.giphy.com/v1/gifs/categories/animals/cats?api_key=4OMJYpPoYwVpe
SWIFT_CLASS("_TtC10GiphyUISDK7GPHUser")
@interface GPHUser : GPHFilterable
/// Username.
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
/// User ID.
@property (nonatomic, readonly, copy) NSString * _Nullable userId;
/// Name of the User.
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// Email.
@property (nonatomic, readonly, copy) NSString * _Nullable email;
/// Description of the User.
@property (nonatomic, readonly, copy) NSString * _Nullable userDescription;
/// Attribution Display Name.
@property (nonatomic, readonly, copy) NSString * _Nullable attributionDisplayName;
/// Display Name for the User.
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
/// Twitter Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable twitter;
/// URL of the Twitter Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable twitterUrl;
/// URL of the Facebook Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable facebookUrl;
/// URL of the InstagramUrl Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable instagramUrl;
/// URL of the Instagram Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable instagram;
/// URL of the Website
@property (nonatomic, readonly, copy) NSString * _Nullable websiteUrl;
/// Displayable URL of the Website.
@property (nonatomic, readonly, copy) NSString * _Nullable websiteDisplayUrl;
/// URL of the Tumblr Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable tumblrUrl;
/// URL of the Avatar.
@property (nonatomic, readonly, copy) NSString * _Nullable avatarUrl;
/// URL of the Banner.
@property (nonatomic, readonly, copy) NSString * _Nullable bannerUrl;
/// URL of the Profile.
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// URL of youtube.
@property (nonatomic, readonly, copy) NSString * _Nullable youtubeUrl;
/// URL of tiktokUrl.
@property (nonatomic, readonly, copy) NSString * _Nullable tiktokUrl;
/// URL of tiktok.
@property (nonatomic, readonly, copy) NSString * _Nullable tiktok;
/// User Type.
@property (nonatomic, readonly, copy) NSString * _Nullable userType;
/// User Public/Private.
@property (nonatomic, readonly) BOOL isPublic;
/// User is Staff.
@property (nonatomic, readonly) BOOL isStaff;
/// User is Verified
@property (nonatomic, readonly) BOOL isVerified;
/// Suppress Chrome.
@property (nonatomic, readonly) BOOL suppressChrome;
/// Last Login Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable loginDate;
/// Join Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable joinDate;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param username Username of the User.
///
- (nonnull instancetype)init:(NSString * _Nonnull)username;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHUser (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHVideoAssets;

/// Represents a Giphy Images (Renditions) for a GPHMedia
SWIFT_CLASS("_TtC10GiphyUISDK8GPHVideo")
@interface GPHVideo : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
@property (nonatomic, readonly, strong) GPHVideoAssets * _Nullable videoAssets;
@property (nonatomic, readonly, copy) NSString * _Nullable videoDescription;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideo (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK13GPHVideoAsset")
@interface GPHVideoAsset : GPHFilterable
/// ID of the Represented GPHMedia Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// URL
@property (nonatomic, readonly, copy) NSString * _Nullable url;
/// Width.
@property (nonatomic, readonly) NSInteger width;
/// Height.
@property (nonatomic, readonly) NSInteger height;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoAsset (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK14GPHVideoAssets")
@interface GPHVideoAssets : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable source;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable lowRes;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable small;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable medium;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable large;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable highRes;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoAssets (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHVideoPlayerView;

SWIFT_CLASS("_TtC10GiphyUISDK14GPHVideoPlayer")
@interface GPHVideoPlayer : NSObject
@property (nonatomic, weak) GPHVideoPlayerView * _Nullable playerView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoPlayer (SWIFT_EXTENSION(GiphyUISDK))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

@protocol GPHVideoPlayerStateListener;

@interface GPHVideoPlayer (SWIFT_EXTENSION(GiphyUISDK))
- (void)addWithListener:(id <GPHVideoPlayerStateListener> _Nonnull)listener;
- (void)removeWithListener:(id <GPHVideoPlayerStateListener> _Nonnull)listener;
- (void)prepareMediaWithMedia:(GPHMedia * _Nonnull)media view:(GPHVideoPlayerView * _Nullable)view;
- (void)loadMediaWithMedia:(GPHMedia * _Nonnull)media autoPlay:(BOOL)autoPlay muteOnPlay:(BOOL)muteOnPlay view:(GPHVideoPlayerView * _Nonnull)view repeatable:(BOOL)repeatable;
- (void)pause;
- (void)resume;
- (void)mute:(BOOL)isMuted;
- (void)stop;
@end

typedef SWIFT_ENUM(NSInteger, GPHVideoPlayerState, open) {
  GPHVideoPlayerStateUnknown = 0,
  GPHVideoPlayerStateReadyToPlay = 1,
  GPHVideoPlayerStatePlaying = 2,
  GPHVideoPlayerStatePaused = 3,
  GPHVideoPlayerStateRepeated = 4,
  GPHVideoPlayerStateIdle = 5,
};


SWIFT_PROTOCOL("_TtP10GiphyUISDK27GPHVideoPlayerStateListener_")
@protocol GPHVideoPlayerStateListener
@optional
- (void)playerStateDidChange:(enum GPHVideoPlayerState)state;
- (void)playerDidFail:(NSString * _Nullable)description;
- (void)muteDidChangeWithIsMuted:(BOOL)isMuted;
- (void)mediaDidChangeWithMedia:(GPHMedia * _Nullable)media;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHVideoPlayerView")
@interface GPHVideoPlayerView : UIView
@property (nonatomic, readonly, strong) GPHMedia * _Nullable media;
@property (nonatomic) NSInteger maxLoopsBeforeMute;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)preloadFirstFrameWithMedia:(GPHMedia * _Nonnull)media videoPlayer:(GPHVideoPlayer * _Nonnull)videoPlayer;
- (void)prepareWithMedia:(GPHMedia * _Nonnull)media videoPlayer:(GPHVideoPlayer * _Nonnull)videoPlayer;
@end


@interface GPHVideoPlayerView (SWIFT_EXTENSION(GiphyUISDK)) <GPHVideoPlayerStateListener>
- (void)playerStateDidChange:(enum GPHVideoPlayerState)state;
- (void)playerDidFail:(NSString * _Nullable)description;
- (void)muteDidChangeWithIsMuted:(BOOL)isMuted;
- (void)mediaDidChangeWithMedia:(GPHMedia * _Nullable)media;
@end



SWIFT_CLASS("_TtC10GiphyUISDK28GPHWaterfallLayoutAttributes")
@interface GPHWaterfallLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;

SWIFT_PROTOCOL("_TtP10GiphyUISDK26GPHWaterfallLayoutDelegate_")
@protocol GPHWaterfallLayoutDelegate
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView sizeForSectionItem:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfColumnsForItemAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewScrollDirection)scrollDirection SWIFT_WARN_UNUSED_RESULT;
@end


@protocol UIViewControllerAnimatedTransitioning;

@interface GPHWrapperViewController (SWIFT_EXTENSION(GiphyUISDK)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerContextTransitioning;

@interface GPHWrapperViewController (SWIFT_EXTENSION(GiphyUISDK)) <UIViewControllerAnimatedTransitioning>
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
@end


SWIFT_CLASS("_TtC10GiphyUISDK5Giphy")
@interface Giphy : NSObject
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK30GiphyAttributionViewController")
@interface GiphyAttributionViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK9GiphyCore")
@interface GiphyCore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHClient * _Nonnull shared;)
+ (GPHClient * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Configure the Client
/// \param apiKey Giphy Api Key to use.
///
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode name:(NSString * _Nonnull)name versionName:(NSString * _Nonnull)versionName;
+ (void)setCustomHeadersWithParameters:(NSDictionary<NSString *, NSString *> * _Nonnull)parameters;
/// Configure Filtering for all the Models
/// \param filter GPHFilterBlock to use and figure out if an object is valid or not.
///
+ (void)setFilterWithFilter:(BOOL (^ _Nonnull)(GPHFilterable * _Nonnull))filter;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GiphyViewController;

SWIFT_PROTOCOL("_TtP10GiphyUISDK13GiphyDelegate_")
@protocol GiphyDelegate
@optional
- (void)didSearchFor:(NSString * _Nonnull)term;
- (void)didCreateFor:(NSString * _Nonnull)term;
- (void)didSelectMediaWithGiphyViewController:(GiphyViewController * _Nonnull)giphyViewController media:(GPHMedia * _Nonnull)media;
- (void)didSelectMediaWithGiphyViewController:(GiphyViewController * _Nonnull)giphyViewController media:(GPHMedia * _Nonnull)media contentType:(enum GPHContentType)contentType;
@required
- (void)didDismissWithController:(GiphyViewController * _Nullable)controller;
@optional
- (void)didTapSuggestion:(GPHSuggestion * _Nonnull)suggestion;
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
@end

@class UIScrollView;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC10GiphyUISDK19GiphyGridController")
@interface GiphyGridController : UIViewController
@property (nonatomic, weak) id <GPHGridDelegate> _Nullable delegate;
@property (nonatomic) UICollectionViewScrollDirection direction;
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
@property (nonatomic) enum GPHRatingType rating;
@property (nonatomic, strong) GPHContent * _Nonnull content;
@property (nonatomic) CGFloat cellPadding;
- (void)setNumberOfTracks:(NSInteger)tracks;
@property (nonatomic) BOOL fixedSizeCells;
@property (nonatomic) enum GPHFileExtension imageFileExtensionForDynamicAssets;
- (void)setAPIKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
- (nonnull instancetype)init;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic) enum GPHRenditionType renditionType;
@property (nonatomic) enum GPHRenditionType clipsPreviewRenditionType;
@property (nonatomic) BOOL enableDynamicResultsInTextSearch;
- (void)update;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHTrackingDelegate>
- (GPHMedia * _Nullable)mediaForIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
- (BOOL)mediaIsLoadedAtIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHWaterfallLayoutDelegate>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView sizeForSectionItem:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfColumnsForItemAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewScrollDirection)scrollDirection SWIFT_WARN_UNUSED_RESULT;
@end

@class UIContextMenuConfiguration;

@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
/// ////////////////// PREVIEW STUFF:::::::
- (UIContextMenuConfiguration * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView contextMenuConfigurationForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=13.0);
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHGridDelegate>
- (void)didScrollWithOffset:(CGFloat)offset;
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC10GiphyUISDK14GiphyPingbacks")
@interface GiphyPingbacks : NSObject
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode;
/// Add additional headers parameters to any Pingback request.
/// If a key is already present the value will be added separated by comma.
/// \param parameters the custom headers dictionary.
///
+ (void)addAdditionalHeadersWithParameters:(NSDictionary<NSString *, NSString *> * _Nullable)parameters;
/// Flush Queue.
+ (void)flush;
+ (void)enableDebugLogging:(BOOL)enable;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable pingbacksId;)
+ (NSString * _Nullable)pingbacksId SWIFT_WARN_UNUSED_RESULT;
+ (void)setPingbacksId:(NSString * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK21GiphySearchController")
@interface GiphySearchController : UIViewController
@property (nonatomic) BOOL showConfirmationScreen;
@property (nonatomic) BOOL shouldLocalizeSearch;
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
@property (nonatomic, weak) id <GiphyDelegate> _Nullable delegate;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)didChooseMediaWithMedia:(GPHMedia * _Nonnull)media;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)selectedContentTypeDidChange:(enum GPHContentType)contentType;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)didTapUsername:(NSString * _Nonnull)username;
- (void)didLongPressCell:(GPHMediaCell * _Nullable)cell;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)searchBarBackButtonTapped;
- (void)searchBarFocusDidChange:(GPHSearchBar * _Nonnull)searchBarView focused:(BOOL)focused text:(NSString * _Nonnull)text;
- (void)searchBarTextDidChange:(GPHSearchBar * _Nonnull)searchBarView query:(NSString * _Nonnull)query;
@end




@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK)) <GPHGridDelegate>
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didScrollWithOffset:(CGFloat)offset;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
@end


SWIFT_CLASS("_TtC10GiphyUISDK19GiphyViewController")
@interface GiphyViewController : GPHWrapperViewController
@property (nonatomic) BOOL swiftUIEnabled;
- (void)setAPIKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
@property (nonatomic, weak) id <GiphyDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nonnull placeholderText;
@property (nonatomic) BOOL disableClipsWarning;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable confirmationScreenChooseButtonText;)
+ (NSString * _Nullable)confirmationScreenChooseButtonText SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfirmationScreenChooseButtonText:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable noResultsText;)
+ (NSString * _Nullable)noResultsText SWIFT_WARN_UNUSED_RESULT;
+ (void)setNoResultsText:(NSString * _Nullable)value;
@property (nonatomic) BOOL enableDynamicText;
@property (nonatomic) enum GPHContentType selectedContentType;
@property (nonatomic, copy) NSString * _Nullable showMoreByUser;
@property (nonatomic) enum GPHStickerColumnCount stickerColumnCount;
/// Option to show a secondary confirmation screen when the user taps a GIF, which shows a larger rendition of the asset.
/// This confirmation screen is only available for <code>.waterfall</code> mode - this property will be ignored if the <code>layout</code> is <code>.carousel</code>.
@property (nonatomic) BOOL showConfirmationScreen;
/// Option to choose whether or not to localize the search results based on phone settings. Default <code>en</code>.
@property (nonatomic) BOOL shouldLocalizeSearch;
/// Set the theme to be <code>.dark</code> or <code>.light</code>.
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
- (void)setMediaConfigWithTypes:(NSArray<NSNumber *> * _Nonnull)types;
/// Set a specific content rating for the search results.
@property (nonatomic) enum GPHRatingType rating;
/// Set whether or not to dim the background when the tray is open in <code>waterfall</code> layout.
@property (nonatomic) BOOL dimBackground;
/// Set the rendition type. See <a href="https://developers.giphy.com/docs/#rendition-guide">Rendition Guide</a>
@property (nonatomic) enum GPHRenditionType renditionType;
@property (nonatomic) enum GPHRenditionType clipsPreviewRenditionType;
/// Set the file extension
@property (nonatomic) enum GPHFileExtension fileExtension;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface GiphyViewController (SWIFT_EXTENSION(GiphyUISDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat trayHeightMultiplier;)
+ (CGFloat)trayHeightMultiplier SWIFT_WARN_UNUSED_RESULT;
+ (void)setTrayHeightMultiplier:(CGFloat)value;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GradientView")
@interface GradientView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK23PingbackSubmissionQueue")
@interface PingbackSubmissionQueue : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef GIPHYUISDK_SWIFT_H
#define GIPHYUISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <GiphyUISDK/GiphyUISDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GiphyUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC10GiphyUISDK12CallToAction")
@interface CallToAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable link;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12CaptionState")
@interface CaptionState : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSCoder;
@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC10GiphyUISDK21EmojiDrawerBackground")
@interface EmojiDrawerBackground : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)layoutSubviews;
@end

@class GPHRequestConfig;
@class NSURLResponse;
@class NSOperation;

/// GIPHY Abstract API Client.
SWIFT_CLASS("_TtC10GiphyUISDK17GPHAbstractClient")
@interface GPHAbstractClient : NSObject
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nullable _apiKey;
/// Network reachability status. Not supported in watchOS.
@property (nonatomic) BOOL useReachability;
/// Perform a request
/// \param config GPHRequestConfig
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)httpRequestWith:(GPHRequestConfig * _Nonnull)config completionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Action types. Must be Int so that it can be used in Objective-C.
typedef SWIFT_ENUM(NSInteger, GPHActionType, open) {
  GPHActionTypeSeen = 0,
  GPHActionTypeHover = 1,
  GPHActionTypeClick = 2,
  GPHActionTypeSent = 3,
  GPHActionTypeFavorite = 4,
  GPHActionTypeStart = 5,
  GPHActionTypeLongpress = 6,
};


/// Sub-classing Operation to make sure we manage its state correctly
SWIFT_CLASS("_TtC10GiphyUISDK17GPHAsyncOperation")
@interface GPHAsyncOperation : NSOperation
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHAsyncOperation (SWIFT_EXTENSION(GiphyUISDK))
/// To handle KVO for ready state
@property (nonatomic, readonly, getter=isReady) BOOL ready;
/// To handle KVO for ready executing
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
/// To handle KVO for finished state
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
/// Override so we can claim to be async.
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
/// Override to manage the state correctly for async.
- (void)start;
/// Override to handle canceling so we can change the state to trigger KVO.
- (void)cancel;
@end


/// A specific type of async operation with a completion handler.
SWIFT_CLASS("_TtC10GiphyUISDK31GPHAsyncOperationWithCompletion")
@interface GPHAsyncOperationWithCompletion : GPHAsyncOperation
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHAttributionView")
@interface GPHAttributionView : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLCache;
@class NSData;
@class NSURLSessionDataTask;
@class GiphyYYImage;

SWIFT_CLASS("_TtC10GiphyUISDK8GPHCache")
@interface GPHCache : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHCache * _Nonnull shared;)
+ (GPHCache * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) NSURLCache * _Nonnull cache;
/// Removes all objects from the cache. This method blocks the calling thread until the cache has been cleared.
/// Uses a semaphore to achieve synchronicity on the disk cache.
- (void)clear;
/// \param urlString The url of the asset.
///
/// \param completion A closure that provide a <code>NSData</code> or an <code>Error</code>.
///
///
/// returns:
/// A network task (<code>URLSessionDataTask</code>) discardable.
- (NSURLSessionDataTask * _Nullable)downloadAssetData:(NSString * _Nonnull)urlString completion:(void (^ _Nullable)(NSData * _Nullable, NSError * _Nullable))completion;
- (NSURLSessionDataTask * _Nullable)downloadAsset:(NSString * _Nonnull)urlString key:(NSString * _Nullable)key completion:(void (^ _Nullable)(GiphyYYImage * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK13GPHFilterable")
@interface GPHFilterable : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) BOOL (^ _Nullable filter)(GPHFilterable * _Nonnull);)
+ (BOOL (^ _Nullable)(GPHFilterable * _Nonnull))filter SWIFT_WARN_UNUSED_RESULT;
+ (void)setFilter:(BOOL (^ _Nullable)(GPHFilterable * _Nonnull))value;
- (BOOL)isValidObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GPHMedia;

/// Represents Giphy Categories & Subcategories
SWIFT_CLASS("_TtC10GiphyUISDK11GPHCategory")
@interface GPHCategory : GPHFilterable <NSCoding>
/// Name of the Category.
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// Encoded name of the Category.
@property (nonatomic, readonly, copy) NSString * _Nonnull nameEncoded;
/// URL Encoded path of the Category (to make sure we have the full-path for subcategories).
@property (nonatomic, readonly, copy) NSString * _Nonnull encodedPath;
/// GIF representation of the Category.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable gif;
/// Subcategories of the Category.
@property (nonatomic, readonly, copy) NSArray<GPHCategory *> * _Nullable subCategories;
/// JSON Representation.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable jsonRepresentation;
/// User Dictionary to Store data in Obj by the Developer
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param name Name of the Category.
///
/// \param nameEncoded URL Encoded name of the Category.
///
/// \param encodedPath URL Encoded path of the Category (to make sure we have the full-path for subcategories).
///
- (nonnull instancetype)init:(NSString * _Nonnull)name nameEncoded:(NSString * _Nonnull)nameEncoded encodedPath:(NSString * _Nonnull)encodedPath;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyUISDK))
- (void)addSubCategory:(GPHCategory * _Nonnull)subCategory;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHUser;
@class GPHChannelTag;

/// Represents Giphy Channels
SWIFT_CLASS("_TtC10GiphyUISDK10GPHChannel")
@interface GPHChannel : GPHFilterable
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger StickersRootId;)
+ (NSInteger)StickersRootId SWIFT_WARN_UNUSED_RESULT;
/// ID of this Channel.
@property (nonatomic, readonly) NSInteger id;
/// Slug of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable slug;
/// Url of the Channel including parents channels. ie “/friends/characters/ross-geller”
@property (nonatomic, readonly, copy) NSString * _Nullable url;
/// Display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
/// Shortd display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable shortDisplayName;
/// Type for this Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable type;
/// Content Type (Gif or Sticker) of the Channel
@property (nonatomic, readonly, copy) NSString * _Nullable contentType;
/// Description of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable descriptionText;
/// Banner Image of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable bannerImage;
/// [optional] The featured gif for the pack itself.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable featuredGif;
/// User who owns this Channel.
@property (nonatomic, readonly, strong) GPHUser * _Nullable user;
/// A list of tags for this Channel.
@property (nonatomic, readonly, copy) NSArray<GPHChannelTag *> * _Nullable tags;
@property (nonatomic, readonly, copy) NSArray<GPHChannel *> * _Nonnull ancestors;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// \param id ID of the Channel.
///
- (nonnull instancetype)init:(NSInteger)id OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface GPHChannel (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHMeta;

/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC10GiphyUISDK11GPHResponse")
@interface GPHResponse : NSObject
/// Message description.
@property (nonatomic, strong) GPHMeta * _Nonnull meta;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta;
@end


/// Represents a Giphy List Channel Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK18GPHChannelResponse")
@interface GPHChannelResponse : GPHResponse
/// Channel object.
@property (nonatomic, readonly, strong) GPHChannel * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHChannel object.
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(GPHChannel * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHChannelResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents Giphy A Channel Tag Object
SWIFT_CLASS("_TtC10GiphyUISDK13GPHChannelTag")
@interface GPHChannelTag : GPHFilterable
/// Display name of the Channel.
@property (nonatomic, readonly, copy) NSString * _Nullable tag;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHChannelTag (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class GPHMediaResponse;
@class GPHListMediaResponse;
@class GPHListTermSuggestionResponse;
@class GPHListChannelResponse;

/// Entry point into the Swift API.
SWIFT_CLASS("_TtC10GiphyUISDK9GPHClient")
@interface GPHClient : GPHAbstractClient
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nonnull apiKey;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHeaders;
/// Initializer
/// \param apiKey Apps api-key to access end-points.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey OBJC_DESIGNATED_INITIALIZER;
/// GIF by ID
/// \param id GIF ID.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nullable)gifByID:(NSString * _Nonnull)id timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// GIFs by IDs
/// \param ids array of GIF IDs.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nullable)gifsByIDs:(NSArray<NSString *> * _Nonnull)ids context:(NSString * _Nullable)context timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Emoji
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
/// \param offset Offset of results (default: 0)
///
/// \param limit Total hits you request (default: 25)
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)emojiWithOffset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Emoji
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
/// \param offset Offset of results (default: 0)
///
/// \param limit Total hits you request (default: 25)
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)defaultEmojisWithOffset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nullable)emojiVariationsByID:(NSString * _Nonnull)id context:(NSString * _Nullable)context timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Trending Searches
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)trendingSearchesWithTimeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListTermSuggestionResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nonnull)channelsSearch:(NSString * _Nonnull)query offset:(NSInteger)offset limit:(NSInteger)limit timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListChannelResponse * _Nullable, NSError * _Nullable))completionHandler;
- (NSOperation * _Nonnull)animate:(NSString * _Nonnull)query timeoutInterval:(NSTimeInterval)timeoutInterval completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

@class NSBundle;

SWIFT_CLASS("_TtC10GiphyUISDK24GPHWrapperViewController")
@interface GPHWrapperViewController : UIViewController
- (nonnull instancetype)init;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
@end


SWIFT_CLASS("_TtC10GiphyUISDK22GPHClipsViewController")
@interface GPHClipsViewController : GPHWrapperViewController
- (void)viewDidLoad;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
@end

enum GPHMediaType : NSInteger;
enum GPHLanguageType : NSInteger;

SWIFT_CLASS("_TtC10GiphyUISDK10GPHContent")
@interface GPHContent : NSObject
@property (nonatomic, readonly, strong) GPHContent * _Nonnull contentCopy;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingGifs;)
+ (GPHContent * _Nonnull)trendingGifs SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingVideo;)
+ (GPHContent * _Nonnull)trendingVideo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingStickers;)
+ (GPHContent * _Nonnull)trendingStickers SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull trendingText;)
+ (GPHContent * _Nonnull)trendingText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull emoji;)
+ (GPHContent * _Nonnull)emoji SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)emojiVariations:(NSString * _Nonnull)forID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHContent * _Nonnull recents;)
+ (GPHContent * _Nonnull)recents SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)searchWithQuery:(NSString * _Nonnull)queryString mediaType:(enum GPHMediaType)mediaType language:(enum GPHLanguageType)language includeDynamicResults:(BOOL)includeDynamicResults SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)animate:(NSString * _Nonnull)input SWIFT_WARN_UNUSED_RESULT;
+ (GPHContent * _Nonnull)trendingWithMediaType:(enum GPHMediaType)mediaType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GPHContentType, open) {
  GPHContentTypeRecents = 0,
  GPHContentTypeGifs = 1,
  GPHContentTypeClips = 2,
  GPHContentTypeStickers = 3,
  GPHContentTypeText = 4,
  GPHContentTypeEmoji = 5,
};


/// Async Request Operations with Completion Handler Support
SWIFT_CLASS("_TtC10GiphyUISDK14GPHCoreRequest")
@interface GPHCoreRequest : GPHAsyncOperationWithCompletion
/// Override the Operation function main to handle the request
- (void)main;
@end

/// Action types. Must be Int so that it can be used in Objective-C.
typedef SWIFT_ENUM(NSInteger, GPHEventType, open) {
  GPHEventTypeRecentlyPicked = 0,
};

typedef SWIFT_ENUM(NSInteger, GPHFileExtension, open) {
  GPHFileExtensionMp4 = 0,
  GPHFileExtensionGif = 1,
  GPHFileExtensionWebp = 2,
};


typedef SWIFT_ENUM(NSInteger, GPHGifButtonColor, open) {
  GPHGifButtonColorPink = 0,
  GPHGifButtonColorBlue = 1,
  GPHGifButtonColorBlack = 2,
  GPHGifButtonColorWhite = 3,
};

@class UICollectionViewCell;

SWIFT_PROTOCOL("_TtP10GiphyUISDK15GPHGridDelegate_")
@protocol GPHGridDelegate
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
- (void)didScrollWithOffset:(CGFloat)offset;
@optional
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
@end


SWIFT_CLASS("_TtC10GiphyUISDK8GPHIcons")
@interface GPHIcons : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




enum GPHRenditionType : NSInteger;

/// Represents a Giphy Image (GIF/Sticker)
SWIFT_CLASS("_TtC10GiphyUISDK8GPHImage")
@interface GPHImage : GPHFilterable
/// ID of the Represented GPHMedia Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// ID of the Represented Object.
@property (nonatomic, readonly) enum GPHRenditionType rendition;
/// URL of the Gif file.
@property (nonatomic, readonly, copy) NSString * _Nullable gifUrl;
/// URL of the Still Gif file.
@property (nonatomic, readonly, copy) NSString * _Nullable stillGifUrl;
/// Width.
@property (nonatomic, readonly) NSInteger width;
/// Height.
@property (nonatomic, readonly) NSInteger height;
/// <h1>of Frames.</h1>
@property (nonatomic, readonly) NSInteger frames;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger gifSize;
/// URL of the WebP file.
@property (nonatomic, readonly, copy) NSString * _Nullable webPUrl;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger webPSize;
/// URL of the mp4 file.
@property (nonatomic, readonly, copy) NSString * _Nullable mp4Url;
/// Gif file size in bytes.
@property (nonatomic, readonly) NSInteger mp4Size;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
/// \param rendition Rendition Type of the Image.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId rendition:(enum GPHRenditionType)rendition;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHImage (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy Images (Renditions) for a GPHMedia
SWIFT_CLASS("_TtC10GiphyUISDK9GPHImages")
@interface GPHImages : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// Original file size and file dimensions. Good for desktop use.
@property (nonatomic, readonly, strong) GPHImage * _Nullable original;
@property (nonatomic, readonly, strong) GPHImage * _Nullable originalStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable preview;
@property (nonatomic, readonly, strong) GPHImage * _Nullable looping;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeight;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightDownsampled;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedHeightSmallStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidth;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthDownsampled;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable fixedWidthSmallStill;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsized;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedSmall;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedMedium;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedLarge;
@property (nonatomic, readonly, strong) GPHImage * _Nullable downsizedStill;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface GPHImages (SWIFT_EXTENSION(GiphyUISDK))
- (GPHImage * _Nullable)rendition:(enum GPHRenditionType)rendition SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPHImages (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

/// Represents Giphy APIs Supported Languages
typedef SWIFT_ENUM(NSInteger, GPHLanguageType, open) {
/// English (en)
  GPHLanguageTypeEnglish = 0,
/// Spanish (es)
  GPHLanguageTypeSpanish = 1,
/// Portuguese (pt)
  GPHLanguageTypePortuguese = 2,
/// Indonesian (id)
  GPHLanguageTypeIndonesian = 3,
/// French (fr)
  GPHLanguageTypeFrench = 4,
/// Arabic (ar)
  GPHLanguageTypeArabic = 5,
/// Turkish (tr)
  GPHLanguageTypeTurkish = 6,
/// Thai (th)
  GPHLanguageTypeThai = 7,
/// Vietnamese (vi)
  GPHLanguageTypeVietnamese = 8,
/// German (de)
  GPHLanguageTypeGerman = 9,
/// Italian (it)
  GPHLanguageTypeItalian = 10,
/// Japanese (ja)
  GPHLanguageTypeJapanese = 11,
/// Chinese Simplified (zh-cn)
  GPHLanguageTypeChineseSimplified = 12,
/// Chinese Traditional (zh-tw)
  GPHLanguageTypeChineseTraditional = 13,
/// Russian (ru)
  GPHLanguageTypeRussian = 14,
/// Korean (ko)
  GPHLanguageTypeKorean = 15,
/// Polish (pl)
  GPHLanguageTypePolish = 16,
/// Dutch (nl)
  GPHLanguageTypeDutch = 17,
/// Romanian (ro)
  GPHLanguageTypeRomanian = 18,
/// Hungarian (hu)
  GPHLanguageTypeHungarian = 19,
/// Swedish (sv)
  GPHLanguageTypeSwedish = 20,
/// Czech (cs)
  GPHLanguageTypeCzech = 21,
/// Hindi (hi)
  GPHLanguageTypeHindi = 22,
/// Bengali (bn)
  GPHLanguageTypeBengali = 23,
/// Danish (da)
  GPHLanguageTypeDanish = 24,
/// Farsi (fa)
  GPHLanguageTypeFarsi = 25,
/// Filipino (tl)
  GPHLanguageTypeFilipino = 26,
/// Finnish (fi)
  GPHLanguageTypeFinnish = 27,
/// Hebrew (iw)
  GPHLanguageTypeHebrew = 28,
/// Malay (ms)
  GPHLanguageTypeMalay = 29,
/// Norwegian (no)
  GPHLanguageTypeNorwegian = 30,
/// Ukrainian (uk)
  GPHLanguageTypeUkrainian = 31,
};

@class GPHPagination;

/// Represents a Giphy List Category Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK23GPHListCategoryResponse")
@interface GPHListCategoryResponse : GPHResponse
/// Category Objects.
@property (nonatomic, readonly, copy) NSArray<GPHCategory *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHCategory *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListCategoryResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Channel Response
SWIFT_CLASS("_TtC10GiphyUISDK22GPHListChannelResponse")
@interface GPHListChannelResponse : GPHResponse
/// Category Objects.
@property (nonatomic, readonly, copy) NSArray<GPHChannel *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHChannel array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHChannel *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListChannelResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Media Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK20GPHListMediaResponse")
@interface GPHListMediaResponse : GPHResponse
/// Gifs/Stickers.
@property (nonatomic, readonly, copy) NSArray<GPHMedia *> * _Nullable data;
/// Pagination info.
@property (nonatomic, readonly, strong) GPHPagination * _Nullable pagination;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia array (optional).
///
/// \param pagination GPHPagination object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(NSArray<GPHMedia *> * _Nullable)data pagination:(GPHPagination * _Nullable)pagination;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListMediaResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy List Term Suggestions Response (multiple results)
SWIFT_CLASS("_TtC10GiphyUISDK29GPHListTermSuggestionResponse")
@interface GPHListTermSuggestionResponse : GPHResponse
/// Terms Suggested.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHTermSuggestion array (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nullable)meta data:(NSArray<NSString *> * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListTermSuggestionResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


enum GPHRatingType : NSInteger;
@class NSDate;
@class GPHVideo;

/// Represents a Giphy Media Object
SWIFT_CLASS("_TtC10GiphyUISDK8GPHMedia")
@interface GPHMedia : GPHFilterable
/// ID of the Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
/// Media Type (GIF|Sticker).
@property (nonatomic, readonly) enum GPHMediaType type;
/// URL of the GIF/Sticker.
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
/// Content Rating (Default G).
@property (nonatomic, readonly) enum GPHRatingType rating;
/// Title.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Caption.
@property (nonatomic, readonly, copy) NSString * _Nullable caption;
/// URL Slug.
@property (nonatomic, readonly, copy) NSString * _Nullable slug;
/// Indexable or Not.
@property (nonatomic, readonly, copy) NSString * _Nullable indexable;
/// Content.
@property (nonatomic, readonly, copy) NSString * _Nullable contentUrl;
/// Bitly Short URL.
@property (nonatomic, readonly, copy) NSString * _Nullable bitlyUrl;
/// Bitly Short URL for GIF.
@property (nonatomic, readonly, copy) NSString * _Nullable bitlyGifUrl;
/// Embed URL.
@property (nonatomic, readonly, copy) NSString * _Nullable embedUrl;
/// Attribution Source.
@property (nonatomic, readonly, copy) NSString * _Nullable source;
/// Attribution Source Domain TLD.
@property (nonatomic, readonly, copy) NSString * _Nullable sourceTld;
/// Attribution Source Post URL.
@property (nonatomic, readonly, copy) NSString * _Nullable sourcePostUrl;
/// Atrribution / User.
@property (nonatomic, readonly, strong) GPHUser * _Nullable user;
@property (nonatomic, readonly, strong) GPHImages * _Nullable images;
/// Tags representing the Media Object.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable tags;
/// Featured Tags.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable featuredTags;
/// Import Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable importDate;
/// Creation Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable createDate;
/// Last Update Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable updateDate;
/// Trending Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable trendingDate;
@property (nonatomic, readonly) BOOL isDynamic;
@property (nonatomic, readonly, strong) GPHVideo * _Nullable video;
/// Analytics Response Payload
@property (nonatomic, readonly, copy) NSString * _Nullable analyticsResponsePayload;
/// text too create
@property (nonatomic, readonly, copy) NSString * _Nullable animatedTextStyle;
@property (nonatomic, readonly) BOOL isHidden;
@property (nonatomic, readonly) BOOL isRemoved;
@property (nonatomic, readonly) BOOL isCommunity;
@property (nonatomic, readonly) BOOL isAnonymous;
@property (nonatomic, readonly) BOOL isFeatured;
@property (nonatomic, readonly) BOOL isRealtime;
@property (nonatomic, readonly) BOOL isIndexable;
@property (nonatomic, readonly) BOOL isSticker;
@property (nonatomic, readonly) BOOL hasAttribution;
@property (nonatomic, readonly, strong) CallToAction * _Nullable callToAction;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param id Media Object ID.
///
/// \param type Media Type (GIF/Sticker).
///
/// \param url URL of the Media Object.
///
- (nonnull instancetype)init:(NSString * _Nonnull)id type:(enum GPHMediaType)type url:(NSString * _Nonnull)url;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
- (NSString * _Nullable)urlWithRendition:(enum GPHRenditionType)rendition fileType:(enum GPHFileExtension)fileType SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGFloat aspectRatio;
@end


@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic) BOOL isEmoji;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable pingbacksAttributes;
@property (nonatomic, copy) NSString * _Nullable responseId;
@end


@interface GPHMedia (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly) BOOL isVideo;
@property (nonatomic, readonly, copy) NSString * _Nonnull videoDetailURL;
@property (nonatomic, readonly, copy) NSString * _Nullable smallVideoAssetURL;
@property (nonatomic, readonly, copy) NSString * _Nullable clipsDetailVideoAssetURL;
- (NSString * _Nonnull)availableMp4Url SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GPHMediaCell")
@interface GPHMediaCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForReuse;
@end


/// Represents a Giphy Media Response (single result)
SWIFT_CLASS("_TtC10GiphyUISDK16GPHMediaResponse")
@interface GPHMediaResponse : GPHResponse
/// Message description.
@property (nonatomic, readonly, strong) GPHMedia * _Nullable data;
/// Convenience Initializer
/// \param meta init with a GPHMeta object.
///
/// \param data GPHMedia object (optional).
///
- (nonnull instancetype)init:(GPHMeta * _Nonnull)meta data:(GPHMedia * _Nullable)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMediaResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy Object Type (GIF/Sticker/…)
typedef SWIFT_ENUM(NSInteger, GPHMediaType, open) {
/// Gif Media Type
  GPHMediaTypeGif = 0,
/// Sticker Media Type
  GPHMediaTypeSticker = 1,
/// Text Media Type
  GPHMediaTypeText = 2,
/// Video Media Type
  GPHMediaTypeVideo = 3,
};

@protocol GPHMediaViewDelegate;
@class GPHTheme;
@class UIImage;

SWIFT_CLASS("_TtC10GiphyUISDK12GPHMediaView")
@interface GPHMediaView : GiphyYYAnimatedImageView
@property (nonatomic, weak) id <GPHMediaViewDelegate> _Nullable delegate;
@property (nonatomic) BOOL showAttribution;
@property (nonatomic, strong) GPHTheme * _Nullable theme;
@property (nonatomic, strong) GPHMedia * _Nullable media;
- (nonnull instancetype)init;
- (void)loadAssetAt:(NSString * _Nonnull)url queueOriginalRendition:(BOOL)queueOriginalRendition;
- (void)cancelLoading;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMediaView (SWIFT_EXTENSION(GiphyUISDK))
- (void)setMedia:(GPHMedia * _Nonnull)media rendition:(enum GPHRenditionType)rendition shouldQueueOriginalRendition:(BOOL)shouldQueueOriginalRendition;
@end


SWIFT_PROTOCOL("_TtP10GiphyUISDK20GPHMediaViewDelegate_")
@protocol GPHMediaViewDelegate
- (void)didPressMoreByUser:(NSString * _Nonnull)user;
@end


/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC10GiphyUISDK7GPHMeta")
@interface GPHMeta : NSObject
/// Unique response id.
@property (nonatomic, readonly, copy) NSString * _Nullable responseId;
/// Status (200, 404…)
@property (nonatomic, readonly) NSInteger status;
/// Message description.
@property (nonatomic, readonly, copy) NSString * _Nonnull msg;
/// Error Code.
@property (nonatomic, readonly, copy) NSString * _Nonnull errorCode;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMeta (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



SWIFT_CLASS("_TtC10GiphyUISDK9GPHOMData")
@interface GPHOMData : GPHFilterable
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Represents a Giphy Response Pagination Info
SWIFT_CLASS("_TtC10GiphyUISDK13GPHPagination")
@interface GPHPagination : NSObject
/// Total Result Count.
@property (nonatomic, readonly) NSInteger totalCount;
/// Actual Result Count (not always == limit)
@property (nonatomic, readonly) NSInteger count;
/// Returned (if Filters applied) Result Count (not always == limit)
@property (nonatomic, readonly) NSInteger filteredCount;
/// Offset to start next set of results.
@property (nonatomic, readonly) NSInteger offset;
/// Next Page token
@property (nonatomic, readonly, copy) NSString * _Nullable nextCursor;
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)updateFilteredCount:(NSInteger)count;
@end


@interface GPHPagination (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy URLRequest Type
typedef SWIFT_ENUM(NSInteger, GPHPingbackRequestType, open) {
/// Pingback Request.
  GPHPingbackRequestTypePingback = 0,
};


/// GIPHY Abstract API Client.
SWIFT_CLASS("_TtC10GiphyUISDK26GPHPingbacksAbstractClient")
@interface GPHPingbacksAbstractClient : NSObject
/// Default timeout for network requests. Default: 10 seconds.
@property (nonatomic) NSTimeInterval timeout;
/// Network reachability status. Not supported in watchOS.
@property (nonatomic) BOOL useReachability;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Entry point into the Swift API.
SWIFT_CLASS("_TtC10GiphyUISDK18GPHPingbacksClient")
@interface GPHPingbacksClient : GPHPingbacksAbstractClient
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nonnull apiKey;
/// Consumer user ID.
@property (nonatomic, copy) NSString * _Nonnull userId;
/// Initializer
/// \param apiKey Apps api-key to access end-points.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey OBJC_DESIGNATED_INITIALIZER;
@end

/// Represents content rating (y,g, pg, pg-13 or r)
typedef SWIFT_ENUM(NSInteger, GPHRatingType, open) {
/// Rated Y
  GPHRatingTypeRatedY = 0,
/// Rated G
  GPHRatingTypeRatedG = 1,
/// Rated PG
  GPHRatingTypeRatedPG = 2,
/// Rated PG-13
  GPHRatingTypeRatedPG13 = 3,
/// Rated R
  GPHRatingTypeRatedR = 4,
/// Not Safe for Work
  GPHRatingTypeNsfw = 5,
/// Unrated
  GPHRatingTypeUnrated = 6,
};


SWIFT_CLASS("_TtC10GiphyUISDK17GPHRecentSearches")
@interface GPHRecentSearches : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK10GPHRecents")
@interface GPHRecents : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Represents a Giphy Rendition Type (Original/Preview/…)
typedef SWIFT_ENUM(NSInteger, GPHRenditionType, open) {
/// Original file size and file dimensions. Good for desktop use.
  GPHRenditionTypeOriginal = 0,
/// Preview image for original.
  GPHRenditionTypeOriginalStill = 1,
/// File size under 50kb. Duration may be truncated to meet file size requirements. Good for thumbnails and previews.
  GPHRenditionTypePreview = 2,
/// Duration set to loop for 15 seconds. Only recommended for this exact use case.
  GPHRenditionTypeLooping = 3,
/// Height set to 200px. Good for mobile use.
  GPHRenditionTypeFixedHeight = 4,
/// Static preview image for fixed_height
  GPHRenditionTypeFixedHeightStill = 5,
/// Height set to 200px. Reduced to 6 frames to minimize file size to the lowest.
/// Works well for unlimited scroll on mobile and as animated previews. See Giphy.com on mobile web as an example.
  GPHRenditionTypeFixedHeightDownsampled = 6,
/// Height set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedHeightSmall = 7,
/// Static preview image for fixed_height_small
  GPHRenditionTypeFixedHeightSmallStill = 8,
/// Width set to 200px. Good for mobile use.
  GPHRenditionTypeFixedWidth = 9,
/// Static preview image for fixed_width
  GPHRenditionTypeFixedWidthStill = 10,
/// Width set to 200px. Reduced to 6 frames. Works well for unlimited scroll on mobile and as animated previews.
  GPHRenditionTypeFixedWidthDownsampled = 11,
/// Width set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedWidthSmall = 12,
/// Static preview image for fixed_width_small
  GPHRenditionTypeFixedWidthSmallStill = 13,
/// File size under 2mb.
  GPHRenditionTypeDownsized = 14,
/// File size under 200kb.
  GPHRenditionTypeDownsizedSmall = 15,
/// File size under 5mb.
  GPHRenditionTypeDownsizedMedium = 16,
/// File size under 8mb.
  GPHRenditionTypeDownsizedLarge = 17,
/// Static preview image for downsized.
  GPHRenditionTypeDownsizedStill = 18,
};

@class NSURLQueryItem;
@class NSURLRequest;

SWIFT_CLASS("_TtC10GiphyUISDK16GPHRequestConfig")
@interface GPHRequestConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull base;
@property (nonatomic, copy) NSArray<NSURLQueryItem *> * _Nullable queryItems;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, copy) NSData * _Nullable httpBody;
@property (nonatomic, copy) NSString * _Nullable contentType;
@property (nonatomic, copy) NSString * _Nonnull path;
@property (nonatomic, copy) NSString * _Nonnull requestType;
@property (nonatomic, copy) NSString * _Nonnull apiKey;
@property (nonatomic) NSInteger retry;
@property (nonatomic) NSTimeInterval timeoutInterval;
- (NSURLRequest * _Nonnull)getRequest SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface GPHResponse (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GPHSearchBar")
@interface GPHSearchBar : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface GPHSearchBar (SWIFT_EXTENSION(GiphyUISDK)) <UITextFieldDelegate>
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, GPHStickerColumnCount, open) {
  GPHStickerColumnCountTwo = 0,
  GPHStickerColumnCountThree = 1,
  GPHStickerColumnCountFour = 2,
};


SWIFT_CLASS("_TtC10GiphyUISDK13GPHSuggestion")
@interface GPHSuggestion : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK9GPHTabBar")
@interface GPHTabBar : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


/// Represents a Giphy Term Suggestion
SWIFT_CLASS("_TtC10GiphyUISDK17GPHTermSuggestion")
@interface GPHTermSuggestion : GPHFilterable
/// Term suggestion.
@property (nonatomic, readonly, copy) NSString * _Nonnull term;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param term Term suggestion.
///
- (nonnull instancetype)init:(NSString * _Nonnull)term;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHTermSuggestion (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class UIResponder;

SWIFT_CLASS("_TtC10GiphyUISDK12GPHTextField")
@interface GPHTextField : UITextField
@property (nonatomic, readonly, strong) UIResponder * _Nullable nextResponder;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (CGRect)textRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)editingRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHTextLoadingView")
@interface GPHTextLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end

enum GPHThemeType : NSInteger;
@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC10GiphyUISDK8GPHTheme")
@interface GPHTheme : NSObject
- (nonnull instancetype)initWithType:(enum GPHThemeType)type;
@property (nonatomic) enum GPHThemeType type;
@property (nonatomic, readonly, strong) UIColor * _Nonnull handleBarColor;
@property (nonatomic, readonly) UIScrollViewIndicatorStyle emojiDrawerScrollIndicatorStyle;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerGradientTopColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerGradientBottomColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull emojiDrawerSeparatorColor;
@property (nonatomic, readonly, strong) UIImage * _Nullable searchButtonIcon;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBackButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchPlaceholderTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBarBackgroundColor;
@property (nonatomic, readonly, strong) UIFont * _Nullable searchTextFont;
@property (nonatomic, readonly) CGFloat searchBarPadding;
@property (nonatomic, readonly) CGFloat searchBarCornerRadius;
@property (nonatomic, readonly) BOOL showSuggestionsBar;
@property (nonatomic, readonly, strong) UIColor * _Nonnull suggestionCellBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull suggestionCellTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tabBarSwitchSelectedColor;
@property (nonatomic, readonly, strong) UIColor * _Nullable tabBarSwitchDefaultColor;
@property (nonatomic, readonly) CGFloat tabBarBackgroundAlpha;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationSelectButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationSelectButtonTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull usernameColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationBackButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull confirmationViewOnGiphyColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull avatarPlaceholderColor;
@property (nonatomic, readonly) CGFloat cellCornerRadius;
@property (nonatomic, readonly, strong) UIColor * _Nonnull stickerBackgroundColor;
@property (nonatomic, readonly) BOOL fixedSizeCells;
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColorForLoadingCells;
@property (nonatomic, readonly) UIKeyboardAppearance keyboardAppearance;
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull defaultTextColor;
@property (nonatomic, readonly) UIBlurEffectStyle blurStyle;
@property (nonatomic, readonly) BOOL isDarkMode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GPHThemeType, open) {
  GPHThemeTypeDark = 0,
  GPHThemeTypeLight = 1,
  GPHThemeTypeLightBlur = 2,
  GPHThemeTypeDarkBlur = 3,
  GPHThemeTypeAutomatic = 4,
};

@class NSIndexPath;

SWIFT_PROTOCOL("_TtP10GiphyUISDK19GPHTrackingDelegate_")
@protocol GPHTrackingDelegate
- (GPHMedia * _Nullable)mediaForIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
- (BOOL)mediaIsLoadedAtIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)impressionOccurredWithMedia:(GPHMedia * _Nonnull)media;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHTrackingManager")
@interface GPHTrackingManager : NSObject
- (void)updateTracking;
+ (BOOL)trackWithMedia:(GPHMedia * _Nonnull)media userID:(NSString * _Nonnull)userID actionType:(enum GPHActionType)actionType;
+ (void)reset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents a Giphy User Object
/// http://api.giphy.com/v1/gifs/categories/animals/cats?api_key=4OMJYpPoYwVpe
SWIFT_CLASS("_TtC10GiphyUISDK7GPHUser")
@interface GPHUser : GPHFilterable
/// Username.
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
/// User ID.
@property (nonatomic, readonly, copy) NSString * _Nullable userId;
/// Name of the User.
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// Email.
@property (nonatomic, readonly, copy) NSString * _Nullable email;
/// Description of the User.
@property (nonatomic, readonly, copy) NSString * _Nullable userDescription;
/// Attribution Display Name.
@property (nonatomic, readonly, copy) NSString * _Nullable attributionDisplayName;
/// Display Name for the User.
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
/// Twitter Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable twitter;
/// URL of the Twitter Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable twitterUrl;
/// URL of the Facebook Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable facebookUrl;
/// URL of the InstagramUrl Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable instagramUrl;
/// URL of the Instagram Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable instagram;
/// URL of the Website
@property (nonatomic, readonly, copy) NSString * _Nullable websiteUrl;
/// Displayable URL of the Website.
@property (nonatomic, readonly, copy) NSString * _Nullable websiteDisplayUrl;
/// URL of the Tumblr Handler.
@property (nonatomic, readonly, copy) NSString * _Nullable tumblrUrl;
/// URL of the Avatar.
@property (nonatomic, readonly, copy) NSString * _Nullable avatarUrl;
/// URL of the Banner.
@property (nonatomic, readonly, copy) NSString * _Nullable bannerUrl;
/// URL of the Profile.
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// URL of youtube.
@property (nonatomic, readonly, copy) NSString * _Nullable youtubeUrl;
/// URL of tiktokUrl.
@property (nonatomic, readonly, copy) NSString * _Nullable tiktokUrl;
/// URL of tiktok.
@property (nonatomic, readonly, copy) NSString * _Nullable tiktok;
/// User Type.
@property (nonatomic, readonly, copy) NSString * _Nullable userType;
/// User Public/Private.
@property (nonatomic, readonly) BOOL isPublic;
/// User is Staff.
@property (nonatomic, readonly) BOOL isStaff;
/// User is Verified
@property (nonatomic, readonly) BOOL isVerified;
/// Suppress Chrome.
@property (nonatomic, readonly) BOOL suppressChrome;
/// Last Login Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable loginDate;
/// Join Date/Time.
@property (nonatomic, readonly, copy) NSDate * _Nullable joinDate;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param username Username of the User.
///
- (nonnull instancetype)init:(NSString * _Nonnull)username;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHUser (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHVideoAssets;

/// Represents a Giphy Images (Renditions) for a GPHMedia
SWIFT_CLASS("_TtC10GiphyUISDK8GPHVideo")
@interface GPHVideo : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
@property (nonatomic, readonly, strong) GPHVideoAssets * _Nullable videoAssets;
@property (nonatomic, readonly, copy) NSString * _Nullable videoDescription;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideo (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK13GPHVideoAsset")
@interface GPHVideoAsset : GPHFilterable
/// ID of the Represented GPHMedia Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
/// URL
@property (nonatomic, readonly, copy) NSString * _Nullable url;
/// Width.
@property (nonatomic, readonly) NSInteger width;
/// Height.
@property (nonatomic, readonly) NSInteger height;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoAsset (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10GiphyUISDK14GPHVideoAssets")
@interface GPHVideoAssets : GPHFilterable
/// ID of the Represented Object.
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaId;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable source;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable lowRes;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable small;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable medium;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable large;
@property (nonatomic, readonly, strong) GPHVideoAsset * _Nullable highRes;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable userDictionary;
/// Convenience Initializer
/// \param mediaId Media Objects ID.
///
- (nonnull instancetype)init:(NSString * _Nonnull)mediaId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoAssets (SWIFT_EXTENSION(GiphyUISDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class GPHVideoPlayerView;

SWIFT_CLASS("_TtC10GiphyUISDK14GPHVideoPlayer")
@interface GPHVideoPlayer : NSObject
@property (nonatomic, weak) GPHVideoPlayerView * _Nullable playerView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHVideoPlayer (SWIFT_EXTENSION(GiphyUISDK))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

@protocol GPHVideoPlayerStateListener;

@interface GPHVideoPlayer (SWIFT_EXTENSION(GiphyUISDK))
- (void)addWithListener:(id <GPHVideoPlayerStateListener> _Nonnull)listener;
- (void)removeWithListener:(id <GPHVideoPlayerStateListener> _Nonnull)listener;
- (void)prepareMediaWithMedia:(GPHMedia * _Nonnull)media view:(GPHVideoPlayerView * _Nullable)view;
- (void)loadMediaWithMedia:(GPHMedia * _Nonnull)media autoPlay:(BOOL)autoPlay muteOnPlay:(BOOL)muteOnPlay view:(GPHVideoPlayerView * _Nonnull)view repeatable:(BOOL)repeatable;
- (void)pause;
- (void)resume;
- (void)mute:(BOOL)isMuted;
- (void)stop;
@end

typedef SWIFT_ENUM(NSInteger, GPHVideoPlayerState, open) {
  GPHVideoPlayerStateUnknown = 0,
  GPHVideoPlayerStateReadyToPlay = 1,
  GPHVideoPlayerStatePlaying = 2,
  GPHVideoPlayerStatePaused = 3,
  GPHVideoPlayerStateRepeated = 4,
  GPHVideoPlayerStateIdle = 5,
};


SWIFT_PROTOCOL("_TtP10GiphyUISDK27GPHVideoPlayerStateListener_")
@protocol GPHVideoPlayerStateListener
@optional
- (void)playerStateDidChange:(enum GPHVideoPlayerState)state;
- (void)playerDidFail:(NSString * _Nullable)description;
- (void)muteDidChangeWithIsMuted:(BOOL)isMuted;
- (void)mediaDidChangeWithMedia:(GPHMedia * _Nullable)media;
@end


SWIFT_CLASS("_TtC10GiphyUISDK18GPHVideoPlayerView")
@interface GPHVideoPlayerView : UIView
@property (nonatomic, readonly, strong) GPHMedia * _Nullable media;
@property (nonatomic) NSInteger maxLoopsBeforeMute;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)preloadFirstFrameWithMedia:(GPHMedia * _Nonnull)media videoPlayer:(GPHVideoPlayer * _Nonnull)videoPlayer;
- (void)prepareWithMedia:(GPHMedia * _Nonnull)media videoPlayer:(GPHVideoPlayer * _Nonnull)videoPlayer;
@end


@interface GPHVideoPlayerView (SWIFT_EXTENSION(GiphyUISDK)) <GPHVideoPlayerStateListener>
- (void)playerStateDidChange:(enum GPHVideoPlayerState)state;
- (void)playerDidFail:(NSString * _Nullable)description;
- (void)muteDidChangeWithIsMuted:(BOOL)isMuted;
- (void)mediaDidChangeWithMedia:(GPHMedia * _Nullable)media;
@end



SWIFT_CLASS("_TtC10GiphyUISDK28GPHWaterfallLayoutAttributes")
@interface GPHWaterfallLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;

SWIFT_PROTOCOL("_TtP10GiphyUISDK26GPHWaterfallLayoutDelegate_")
@protocol GPHWaterfallLayoutDelegate
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView sizeForSectionItem:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfColumnsForItemAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewScrollDirection)scrollDirection SWIFT_WARN_UNUSED_RESULT;
@end


@protocol UIViewControllerAnimatedTransitioning;

@interface GPHWrapperViewController (SWIFT_EXTENSION(GiphyUISDK)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerContextTransitioning;

@interface GPHWrapperViewController (SWIFT_EXTENSION(GiphyUISDK)) <UIViewControllerAnimatedTransitioning>
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
@end


SWIFT_CLASS("_TtC10GiphyUISDK5Giphy")
@interface Giphy : NSObject
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK30GiphyAttributionViewController")
@interface GiphyAttributionViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK9GiphyCore")
@interface GiphyCore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GPHClient * _Nonnull shared;)
+ (GPHClient * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Configure the Client
/// \param apiKey Giphy Api Key to use.
///
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode name:(NSString * _Nonnull)name versionName:(NSString * _Nonnull)versionName;
+ (void)setCustomHeadersWithParameters:(NSDictionary<NSString *, NSString *> * _Nonnull)parameters;
/// Configure Filtering for all the Models
/// \param filter GPHFilterBlock to use and figure out if an object is valid or not.
///
+ (void)setFilterWithFilter:(BOOL (^ _Nonnull)(GPHFilterable * _Nonnull))filter;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GiphyViewController;

SWIFT_PROTOCOL("_TtP10GiphyUISDK13GiphyDelegate_")
@protocol GiphyDelegate
@optional
- (void)didSearchFor:(NSString * _Nonnull)term;
- (void)didCreateFor:(NSString * _Nonnull)term;
- (void)didSelectMediaWithGiphyViewController:(GiphyViewController * _Nonnull)giphyViewController media:(GPHMedia * _Nonnull)media;
- (void)didSelectMediaWithGiphyViewController:(GiphyViewController * _Nonnull)giphyViewController media:(GPHMedia * _Nonnull)media contentType:(enum GPHContentType)contentType;
@required
- (void)didDismissWithController:(GiphyViewController * _Nullable)controller;
@optional
- (void)didTapSuggestion:(GPHSuggestion * _Nonnull)suggestion;
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
@end

@class UIScrollView;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC10GiphyUISDK19GiphyGridController")
@interface GiphyGridController : UIViewController
@property (nonatomic, weak) id <GPHGridDelegate> _Nullable delegate;
@property (nonatomic) UICollectionViewScrollDirection direction;
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
@property (nonatomic) enum GPHRatingType rating;
@property (nonatomic, strong) GPHContent * _Nonnull content;
@property (nonatomic) CGFloat cellPadding;
- (void)setNumberOfTracks:(NSInteger)tracks;
@property (nonatomic) BOOL fixedSizeCells;
@property (nonatomic) enum GPHFileExtension imageFileExtensionForDynamicAssets;
- (void)setAPIKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
- (nonnull instancetype)init;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic) enum GPHRenditionType renditionType;
@property (nonatomic) enum GPHRenditionType clipsPreviewRenditionType;
@property (nonatomic) BOOL enableDynamicResultsInTextSearch;
- (void)update;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHTrackingDelegate>
- (GPHMedia * _Nullable)mediaForIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
- (BOOL)mediaIsLoadedAtIndexPath:(NSIndexPath * _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHWaterfallLayoutDelegate>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView sizeForSectionItem:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfColumnsForItemAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewScrollDirection)scrollDirection SWIFT_WARN_UNUSED_RESULT;
@end

@class UIContextMenuConfiguration;

@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
/// ////////////////// PREVIEW STUFF:::::::
- (UIContextMenuConfiguration * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView contextMenuConfigurationForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=13.0);
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <GPHGridDelegate>
- (void)didScrollWithOffset:(CGFloat)offset;
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
@end


@interface GiphyGridController (SWIFT_EXTENSION(GiphyUISDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC10GiphyUISDK14GiphyPingbacks")
@interface GiphyPingbacks : NSObject
+ (void)configureWithApiKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode;
/// Add additional headers parameters to any Pingback request.
/// If a key is already present the value will be added separated by comma.
/// \param parameters the custom headers dictionary.
///
+ (void)addAdditionalHeadersWithParameters:(NSDictionary<NSString *, NSString *> * _Nullable)parameters;
/// Flush Queue.
+ (void)flush;
+ (void)enableDebugLogging:(BOOL)enable;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable pingbacksId;)
+ (NSString * _Nullable)pingbacksId SWIFT_WARN_UNUSED_RESULT;
+ (void)setPingbacksId:(NSString * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK21GiphySearchController")
@interface GiphySearchController : UIViewController
@property (nonatomic) BOOL showConfirmationScreen;
@property (nonatomic) BOOL shouldLocalizeSearch;
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
@property (nonatomic, weak) id <GiphyDelegate> _Nullable delegate;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)didChooseMediaWithMedia:(GPHMedia * _Nonnull)media;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)selectedContentTypeDidChange:(enum GPHContentType)contentType;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)didTapUsername:(NSString * _Nonnull)username;
- (void)didLongPressCell:(GPHMediaCell * _Nullable)cell;
@end


@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK))
- (void)searchBarBackButtonTapped;
- (void)searchBarFocusDidChange:(GPHSearchBar * _Nonnull)searchBarView focused:(BOOL)focused text:(NSString * _Nonnull)text;
- (void)searchBarTextDidChange:(GPHSearchBar * _Nonnull)searchBarView query:(NSString * _Nonnull)query;
@end




@interface GiphySearchController (SWIFT_EXTENSION(GiphyUISDK)) <GPHGridDelegate>
- (void)errorDidOccur:(NSError * _Nonnull)error;
- (void)syntheticErrorDidOccur;
- (void)didSelectMoreByYouWithQuery:(NSString * _Nonnull)query;
- (void)contentDidUpdateWithResultCount:(NSInteger)resultCount error:(NSError * _Nullable)error;
- (void)didScrollWithOffset:(CGFloat)offset;
- (void)didSelectMediaWithMedia:(GPHMedia * _Nonnull)media cell:(UICollectionViewCell * _Nonnull)cell;
@end


SWIFT_CLASS("_TtC10GiphyUISDK19GiphyViewController")
@interface GiphyViewController : GPHWrapperViewController
@property (nonatomic) BOOL swiftUIEnabled;
- (void)setAPIKey:(NSString * _Nonnull)apiKey verificationMode:(BOOL)verificationMode metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
@property (nonatomic, weak) id <GiphyDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nonnull placeholderText;
@property (nonatomic) BOOL disableClipsWarning;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable confirmationScreenChooseButtonText;)
+ (NSString * _Nullable)confirmationScreenChooseButtonText SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfirmationScreenChooseButtonText:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable noResultsText;)
+ (NSString * _Nullable)noResultsText SWIFT_WARN_UNUSED_RESULT;
+ (void)setNoResultsText:(NSString * _Nullable)value;
@property (nonatomic) BOOL enableDynamicText;
@property (nonatomic) enum GPHContentType selectedContentType;
@property (nonatomic, copy) NSString * _Nullable showMoreByUser;
@property (nonatomic) enum GPHStickerColumnCount stickerColumnCount;
/// Option to show a secondary confirmation screen when the user taps a GIF, which shows a larger rendition of the asset.
/// This confirmation screen is only available for <code>.waterfall</code> mode - this property will be ignored if the <code>layout</code> is <code>.carousel</code>.
@property (nonatomic) BOOL showConfirmationScreen;
/// Option to choose whether or not to localize the search results based on phone settings. Default <code>en</code>.
@property (nonatomic) BOOL shouldLocalizeSearch;
/// Set the theme to be <code>.dark</code> or <code>.light</code>.
@property (nonatomic, strong) GPHTheme * _Nonnull theme;
- (void)setMediaConfigWithTypes:(NSArray<NSNumber *> * _Nonnull)types;
/// Set a specific content rating for the search results.
@property (nonatomic) enum GPHRatingType rating;
/// Set whether or not to dim the background when the tray is open in <code>waterfall</code> layout.
@property (nonatomic) BOOL dimBackground;
/// Set the rendition type. See <a href="https://developers.giphy.com/docs/#rendition-guide">Rendition Guide</a>
@property (nonatomic) enum GPHRenditionType renditionType;
@property (nonatomic) enum GPHRenditionType clipsPreviewRenditionType;
/// Set the file extension
@property (nonatomic) enum GPHFileExtension fileExtension;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface GiphyViewController (SWIFT_EXTENSION(GiphyUISDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat trayHeightMultiplier;)
+ (CGFloat)trayHeightMultiplier SWIFT_WARN_UNUSED_RESULT;
+ (void)setTrayHeightMultiplier:(CGFloat)value;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@end


SWIFT_CLASS("_TtC10GiphyUISDK12GradientView")
@interface GradientView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10GiphyUISDK23PingbackSubmissionQueue")
@interface PingbackSubmissionQueue : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
